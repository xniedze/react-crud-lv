{
  "version": 3,
  "sources": ["src/header-filter.tsx"],
  "sourcesContent": ["import { _enum, type EnumModel } from '@hilla/form';\nimport { DatePicker } from '@hilla/react-components/DatePicker.js';\nimport { Item } from '@hilla/react-components/Item.js';\nimport { ListBox } from '@hilla/react-components/ListBox.js';\nimport { NumberField } from '@hilla/react-components/NumberField.js';\nimport { Select, type SelectElement } from '@hilla/react-components/Select.js';\nimport { TextField, type TextFieldElement } from '@hilla/react-components/TextField.js';\nimport { TimePicker } from '@hilla/react-components/TimePicker.js';\nimport { type ReactElement, type RefObject, useContext, useEffect, useRef, useState } from 'react';\nimport { ColumnContext } from './autogrid-column-context.js';\nimport { useDatePickerI18n } from './locale.js';\nimport type FilterUnion from './types/dev/hilla/crud/filter/FilterUnion.js';\nimport Matcher from './types/dev/hilla/crud/filter/PropertyStringFilter/Matcher.js';\nimport { convertToTitleCase } from './util';\n\nexport type HeaderFilterProps = Readonly<{\n  /**\n   * If true, the column can be sorted. This is useful to disable sorting for\n   * properties that are not sortable in the backend, or that require excessive processing.\n   */\n  sortable?: boolean;\n  /**\n   * If true, the column can be filtered. This is useful to disable filtering for\n   * properties that are not sortable in the backend, or that require excessive processing.\n   */\n  filterable?: boolean;\n  /**\n   * Placeholder text for the filter input.\n   * Only applies to string, number and date/time value filters.\n   */\n  filterPlaceholder?: string;\n  /**\n   * Debounce time for the filter input in milliseconds.\n   * Only applies to string value filters and number value filters.\n   */\n  filterDebounceTime?: number;\n  /**\n   * Minimum length for the filter input.\n   * Only applies to string value filters.\n   */\n  filterMinLength?: number;\n}>;\n\nfunction useFilterState(initialMatcher: Matcher) {\n  const context = useContext(ColumnContext)!;\n  const [matcher, setMatcher] = useState(initialMatcher);\n  const [filterValue, setFilterValue] = useState('');\n\n  function updateFilter(newMatcher: Matcher, newFilterValue: string) {\n    setFilterValue(newFilterValue);\n    setMatcher(newMatcher);\n\n    const filter: FilterUnion = {\n      '@type': 'propertyString',\n      propertyId: context.propertyInfo.name,\n      filterValue: newFilterValue,\n      matcher: newMatcher,\n    };\n    context.setPropertyFilter(filter);\n  }\n\n  return { matcher, filterValue, updateFilter };\n}\n\n// Workaround for https://github.com/vaadin/react-components/issues/148\nfunction useSelectInitWorkaround(selectRef: RefObject<SelectElement>) {\n  useEffect(() => {\n    setTimeout(() => {\n      if (selectRef.current) {\n        selectRef.current.requestContentUpdate();\n      }\n    }, 1);\n  }, []);\n}\n\n// extracted component (and type) to avoid code duplication\ntype ComparationSelectionProps = {\n  value: Matcher;\n  onMatcherChanged(matcher: Matcher): void;\n};\n\nfunction ComparationSelection({ onMatcherChanged, value }: ComparationSelectionProps): ReactElement {\n  const select = useRef<SelectElement>(null);\n\n  useSelectInitWorkaround(select);\n\n  return (\n    <Select\n      theme=\"small\"\n      className=\"auto-grid-comparation-selection\"\n      ref={select}\n      value={value}\n      onValueChanged={({ detail }) => {\n        onMatcherChanged(detail.value as Matcher);\n      }}\n      renderer={() => (\n        <ListBox>\n          <Item value={Matcher.GREATER_THAN} {...{ label: '>' }}>\n            &gt; Greater than\n          </Item>\n          <Item value={Matcher.LESS_THAN} {...{ label: '<' }}>\n            &lt; Less than\n          </Item>\n          <Item value={Matcher.EQUALS} {...{ label: '=' }}>\n            = Equals\n          </Item>\n        </ListBox>\n      )}\n    ></Select>\n  );\n}\n\nexport function StringHeaderFilter(): ReactElement {\n  const context = useContext(ColumnContext)!;\n  const { filterPlaceholder, filterDebounceTime, filterMinLength } = context.customColumnOptions ?? {};\n  const { updateFilter } = useFilterState(Matcher.CONTAINS);\n  const [inputValue, setInputValue] = useState('');\n\n  useEffect(() => {\n    if (filterMinLength && inputValue && inputValue.length < filterMinLength) {\n      updateFilter(Matcher.CONTAINS, '');\n      return () => {};\n    }\n\n    const delayInputTimeoutId = setTimeout(() => {\n      updateFilter(Matcher.CONTAINS, inputValue);\n    }, filterDebounceTime ?? 200);\n    return () => clearTimeout(delayInputTimeoutId);\n  }, [inputValue]);\n\n  return (\n    <div className=\"auto-grid-string-filter\">\n      <TextField\n        theme=\"small\"\n        placeholder={filterPlaceholder ?? 'Filter...'}\n        onInput={(e: any) => {\n          const fieldValue = ((e as InputEvent).target as TextFieldElement).value;\n          setInputValue(fieldValue);\n        }}\n      ></TextField>\n    </div>\n  );\n}\n\nexport function NumberHeaderFilter(): ReactElement {\n  const context = useContext(ColumnContext)!;\n  const { filterPlaceholder, filterDebounceTime } = context.customColumnOptions ?? {};\n  const [inputValue, setInputValue] = useState('');\n  const { matcher, filterValue, updateFilter } = useFilterState(Matcher.GREATER_THAN);\n  const select = useRef<SelectElement>(null);\n\n  useSelectInitWorkaround(select);\n\n  useEffect(() => {\n    const delayInputTimeoutId = setTimeout(() => {\n      updateFilter(matcher, inputValue);\n    }, filterDebounceTime ?? 200);\n    return () => clearTimeout(delayInputTimeoutId);\n  }, [inputValue]);\n\n  return (\n    <div className=\"auto-grid-number-filter\">\n      <ComparationSelection value={matcher} onMatcherChanged={(m) => updateFilter(m, filterValue)} />\n      <NumberField\n        theme=\"small\"\n        placeholder={filterPlaceholder ?? 'Filter...'}\n        onInput={(e) => {\n          const fieldValue = ((e as InputEvent).target as TextFieldElement).value;\n          setInputValue(fieldValue);\n        }}\n      />\n    </div>\n  );\n}\n\nexport function EnumHeaderFilter(): ReactElement {\n  const { filterValue, updateFilter } = useFilterState(Matcher.EQUALS);\n  const context = useContext(ColumnContext)!;\n  const model = context.propertyInfo.model as EnumModel;\n  const options = [\n    {\n      value: '',\n      label: '',\n    },\n    ...Object.keys(model[_enum]).map((value) => ({\n      label: convertToTitleCase(value),\n      value,\n    })),\n  ];\n  return (\n    <div className=\"auto-grid-enum-filter\">\n      <Select\n        theme=\"small\"\n        items={options}\n        value={filterValue}\n        onValueChanged={(e) => {\n          const newFilterValue = e.detail.value;\n          updateFilter(Matcher.EQUALS, newFilterValue);\n        }}\n      />\n    </div>\n  );\n}\n\nexport function BooleanHeaderFilter(): ReactElement {\n  const { filterValue, updateFilter } = useFilterState(Matcher.EQUALS);\n  const select = useRef<SelectElement>(null);\n\n  useSelectInitWorkaround(select);\n\n  return (\n    <div className=\"auto-grid-boolean-filter\">\n      <Select\n        theme=\"small\"\n        ref={select}\n        onValueChanged={(e) => {\n          const newFilterValue = e.detail.value;\n          updateFilter(Matcher.EQUALS, newFilterValue);\n        }}\n        renderer={() => (\n          <ListBox>\n            <Item value={''} {...{ label: '' }}></Item>\n            <Item value={'True'} {...{ label: 'Yes' }}>\n              Yes\n            </Item>\n            <Item value={'False'} {...{ label: 'No' }}>\n              No\n            </Item>\n          </ListBox>\n        )}\n        value={filterValue}\n      ></Select>\n    </div>\n  );\n}\n\nexport function DateHeaderFilter(): ReactElement {\n  const context = useContext(ColumnContext)!;\n  const i18n = useDatePickerI18n();\n  const { matcher, filterValue, updateFilter } = useFilterState(Matcher.GREATER_THAN);\n  const [invalid, setInvalid] = useState(false);\n\n  return (\n    <div className=\"auto-grid-date-filter\">\n      <ComparationSelection value={matcher} onMatcherChanged={(m) => updateFilter(m, filterValue)} />\n      <DatePicker\n        theme=\"small\"\n        value={filterValue}\n        placeholder={context.customColumnOptions?.filterPlaceholder ?? 'Filter...'}\n        i18n={i18n}\n        onInvalidChanged={({ detail: { value } }) => {\n          setInvalid(value);\n        }}\n        onValueChanged={({ detail: { value } }) => {\n          if (!(invalid || value === filterValue)) {\n            updateFilter(matcher, value);\n          }\n        }}\n      />\n    </div>\n  );\n}\n\nexport function TimeHeaderFilter(): ReactElement {\n  const context = useContext(ColumnContext)!;\n  const { matcher, filterValue, updateFilter } = useFilterState(Matcher.GREATER_THAN);\n  const [invalid, setInvalid] = useState(false);\n\n  return (\n    <div className=\"auto-grid-time-filter\">\n      <ComparationSelection value={matcher} onMatcherChanged={(m) => updateFilter(m, filterValue)} />\n      <TimePicker\n        theme=\"small\"\n        value={filterValue}\n        placeholder={context.customColumnOptions?.filterPlaceholder ?? 'Filter...'}\n        onInvalidChanged={({ detail: { value } }) => {\n          setInvalid(value);\n        }}\n        onValueChanged={({ detail: { value } }) => {\n          if (!(invalid || value === filterValue)) {\n            updateFilter(matcher, value);\n          }\n        }}\n      />\n    </div>\n  );\n}\n\nexport function NoHeaderFilter(): ReactElement {\n  return <></>;\n}\n"],
  "mappings": "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",
  "names": []
}

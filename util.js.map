{
  "version": 3,
  "sources": ["../../../scripts/register.js", "src/util.tsx"],
  "sourcesContent": ["export function __REGISTER__(feature) {\n  window.Vaadin ??= {};\n  window.Vaadin.registrations ??= [];\n  window.Vaadin.registrations.push({\n    is: feature ? `${__NAME__}/${feature}` : __NAME__,\n    version: __VERSION__,\n  });\n}\n", "import React, { type CSSProperties, forwardRef } from 'react';\nimport type FilterUnion from './types/com/vaadin/hilla/crud/filter/FilterUnion';\n\nexport type ComponentStyleProps = Readonly<{\n  id?: string;\n  style?: CSSProperties;\n  className?: string;\n}>;\n\nexport function convertToTitleCase(inputString: string): string {\n  // Convert underscores to spaces\n  const stringWithSpaces = inputString.replace(/_/gu, ' ');\n\n  // Convert to title case\n  const words = stringWithSpaces.split(' ');\n  const titleCaseWords = words.map((word) => word.charAt(0).toUpperCase() + word.slice(1).toLowerCase());\n\n  // Join the title case words with spaces\n  return titleCaseWords.join(' ');\n}\n\nexport function registerStylesheet(stylesheet: CSSStyleSheet): void {\n  const css = Array.from(stylesheet.cssRules)\n    .map((rule) => rule.cssText)\n    .join('\\n');\n\n  const styleTag = document.createElement('style');\n  styleTag.textContent = css;\n  document.head.prepend(styleTag);\n}\n\nconst registeredFeatures = new Set<string>();\nfunction useFeatureRegistration(feature: string): void {\n  if (registeredFeatures.has(feature)) {\n    return;\n  }\n\n  registeredFeatures.add(feature);\n  // @ts-expect-error: esbuild injection\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n  __REGISTER__(feature);\n}\n\nexport function featureRegistration<C extends (...args: any[]) => any>(Component: C, feature: string): C {\n  return forwardRef<unknown, React.JSX.LibraryManagedAttributes<C, NonNullable<unknown>>>((props, ref) => {\n    useFeatureRegistration(feature);\n    return <Component {...props} ref={ref} />;\n  }) as unknown as C;\n}\n\nexport function isFilterEmpty(filter: FilterUnion): boolean {\n  if (filter['@type'] === 'and' || filter['@type'] === 'or') {\n    if (filter.children.length === 0) {\n      return true;\n    }\n    return filter.children.every((child) => isFilterEmpty(child as FilterUnion));\n  }\n  if ('filterValue' in filter) {\n    return filter.filterValue === '';\n  }\n  throw new Error(`Unknown filter type: ${'@type' in filter ? filter['@type'] : JSON.stringify(filter)} `);\n}\n"],
  "mappings": "AAAO,SAAS,aAAa,SAAS;AACpC,SAAO,WAAW,CAAC;AACnB,SAAO,OAAO,kBAAkB,CAAC;AACjC,SAAO,OAAO,cAAc,KAAK;AAAA,IAC/B,IAAI,UAAU,GAAG,0BAAQ,IAAI,OAAO,KAAK;AAAA,IACzC,SAAS;AAAA,EACX,CAAC;AACH;ACuCW;AA9CX,OAAO,SAA6B,kBAAkB;AAS/C,SAAS,mBAAmB,aAA6B;AAE9D,QAAM,mBAAmB,YAAY,QAAQ,OAAO,GAAG;AAGvD,QAAM,QAAQ,iBAAiB,MAAM,GAAG;AACxC,QAAM,iBAAiB,MAAM,IAAI,CAAC,SAAS,KAAK,OAAO,CAAC,EAAE,YAAY,IAAI,KAAK,MAAM,CAAC,EAAE,YAAY,CAAC;AAGrG,SAAO,eAAe,KAAK,GAAG;AAChC;AAEO,SAAS,mBAAmB,YAAiC;AAClE,QAAM,MAAM,MAAM,KAAK,WAAW,QAAQ,EACvC,IAAI,CAAC,SAAS,KAAK,OAAO,EAC1B,KAAK,IAAI;AAEZ,QAAM,WAAW,SAAS,cAAc,OAAO;AAC/C,WAAS,cAAc;AACvB,WAAS,KAAK,QAAQ,QAAQ;AAChC;AAEA,MAAM,qBAAqB,oBAAI,IAAY;AAC3C,SAAS,uBAAuB,SAAuB;AACrD,MAAI,mBAAmB,IAAI,OAAO,GAAG;AACnC;AAAA,EACF;AAEA,qBAAmB,IAAI,OAAO;AAG9B,eAAa,OAAO;AACtB;AAEO,SAAS,oBAAuD,WAAc,SAAoB;AACvG,SAAO,WAAiF,CAAC,OAAO,QAAQ;AACtG,2BAAuB,OAAO;AAC9B,WAAO,oBAAC,aAAW,GAAG,OAAO,KAAU;AAAA,EACzC,CAAC;AACH;AAEO,SAAS,cAAc,QAA8B;AAC1D,MAAI,OAAO,OAAO,MAAM,SAAS,OAAO,OAAO,MAAM,MAAM;AACzD,QAAI,OAAO,SAAS,WAAW,GAAG;AAChC,aAAO;AAAA,IACT;AACA,WAAO,OAAO,SAAS,MAAM,CAAC,UAAU,cAAc,KAAoB,CAAC;AAAA,EAC7E;AACA,MAAI,iBAAiB,QAAQ;AAC3B,WAAO,OAAO,gBAAgB;AAAA,EAChC;AACA,QAAM,IAAI,MAAM,wBAAwB,WAAW,SAAS,OAAO,OAAO,IAAI,KAAK,UAAU,MAAM,CAAC,GAAG;AACzG;",
  "names": []
}

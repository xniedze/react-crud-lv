{
  "version": 3,
  "sources": ["src/autogrid-columns.tsx"],
  "sourcesContent": ["import type { GridColumnProps } from '@hilla/react-components/GridColumn.js';\nimport {\n  AutoGridBooleanRenderer,\n  AutoGridDateRenderer,\n  AutoGridDateTimeRenderer,\n  AutoGridDecimalRenderer,\n  AutoGridEnumRenderer,\n  AutoGridIntegerRenderer,\n  AutoGridJsonRenderer,\n  AutoGridTimeRenderer,\n} from './autogrid-renderers';\nimport {\n  BooleanHeaderFilter,\n  DateHeaderFilter,\n  EnumHeaderFilter,\n  NoHeaderFilter,\n  NumberHeaderFilter,\n  StringHeaderFilter,\n  TimeHeaderFilter,\n  type HeaderFilterProps,\n} from './header-filter';\nimport type { PropertyInfo } from './model-info';\n\nexport type ColumnOptions = HeaderFilterProps & Omit<GridColumnProps<any>, 'dangerouslySetInnerHTML'>;\n\n// eslint-disable-next-line consistent-return\nfunction getTypeColumnOptions(propertyInfo: PropertyInfo): ColumnOptions {\n  // eslint-disable-next-line default-case\n  switch (propertyInfo.type) {\n    case 'integer':\n      return {\n        autoWidth: true,\n        textAlign: 'end',\n        flexGrow: 0,\n        renderer: AutoGridIntegerRenderer,\n        headerRenderer: NumberHeaderFilter,\n      };\n    case 'decimal':\n      return {\n        autoWidth: true,\n        textAlign: 'end',\n        flexGrow: 0,\n        renderer: AutoGridDecimalRenderer,\n        headerRenderer: NumberHeaderFilter,\n      };\n    case 'boolean':\n      return {\n        autoWidth: true,\n        textAlign: 'end',\n        flexGrow: 0,\n        renderer: AutoGridBooleanRenderer,\n        headerRenderer: BooleanHeaderFilter,\n      };\n    case 'date':\n      return {\n        autoWidth: true,\n        textAlign: 'end',\n        flexGrow: 0,\n        renderer: AutoGridDateRenderer,\n        headerRenderer: DateHeaderFilter,\n      };\n    case 'time':\n      return {\n        autoWidth: true,\n        textAlign: 'end',\n        flexGrow: 0,\n        renderer: AutoGridTimeRenderer,\n        headerRenderer: TimeHeaderFilter,\n      };\n    case 'datetime':\n      return {\n        autoWidth: true,\n        textAlign: 'end',\n        flexGrow: 0,\n        renderer: AutoGridDateTimeRenderer,\n        headerRenderer: DateHeaderFilter,\n      };\n    case 'enum':\n      return {\n        autoWidth: true,\n        renderer: AutoGridEnumRenderer,\n        headerRenderer: EnumHeaderFilter,\n      };\n    case 'string':\n      return {\n        autoWidth: true,\n        headerRenderer: StringHeaderFilter,\n      };\n    case 'object':\n      return {\n        autoWidth: true,\n        renderer: AutoGridJsonRenderer,\n        headerRenderer: NoHeaderFilter,\n      };\n    default:\n      return {\n        autoWidth: true,\n        headerRenderer: NoHeaderFilter,\n      };\n  }\n}\n\nexport function getColumnOptions(\n  propertyInfo: PropertyInfo,\n  customColumnOptions: ColumnOptions | undefined,\n): ColumnOptions {\n  const typeColumnOptions = getTypeColumnOptions(propertyInfo);\n  const finalHeaderRenderer =\n    customColumnOptions?.filterable === false ? NoHeaderFilter : typeColumnOptions.headerRenderer;\n  // TODO: Remove eslint-disable when all TypeScript version issues are resolved\n  // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n  const columnOptions = customColumnOptions\n    ? { ...typeColumnOptions, ...customColumnOptions, headerRenderer: finalHeaderRenderer }\n    : typeColumnOptions;\n  if (!columnOptions.headerRenderer) {\n    console.error(`No header renderer defined for column ${propertyInfo.name}`);\n  }\n  return columnOptions;\n}\n"],
  "mappings": "AACA;AAAA,EACE;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,OACK;AACP;AAAA,EACE;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,OAEK;AAMP,SAAS,qBAAqB,cAA2C;AAEvE,UAAQ,aAAa,MAAM;AAAA,IACzB,KAAK;AACH,aAAO;AAAA,QACL,WAAW;AAAA,QACX,WAAW;AAAA,QACX,UAAU;AAAA,QACV,UAAU;AAAA,QACV,gBAAgB;AAAA,MAClB;AAAA,IACF,KAAK;AACH,aAAO;AAAA,QACL,WAAW;AAAA,QACX,WAAW;AAAA,QACX,UAAU;AAAA,QACV,UAAU;AAAA,QACV,gBAAgB;AAAA,MAClB;AAAA,IACF,KAAK;AACH,aAAO;AAAA,QACL,WAAW;AAAA,QACX,WAAW;AAAA,QACX,UAAU;AAAA,QACV,UAAU;AAAA,QACV,gBAAgB;AAAA,MAClB;AAAA,IACF,KAAK;AACH,aAAO;AAAA,QACL,WAAW;AAAA,QACX,WAAW;AAAA,QACX,UAAU;AAAA,QACV,UAAU;AAAA,QACV,gBAAgB;AAAA,MAClB;AAAA,IACF,KAAK;AACH,aAAO;AAAA,QACL,WAAW;AAAA,QACX,WAAW;AAAA,QACX,UAAU;AAAA,QACV,UAAU;AAAA,QACV,gBAAgB;AAAA,MAClB;AAAA,IACF,KAAK;AACH,aAAO;AAAA,QACL,WAAW;AAAA,QACX,WAAW;AAAA,QACX,UAAU;AAAA,QACV,UAAU;AAAA,QACV,gBAAgB;AAAA,MAClB;AAAA,IACF,KAAK;AACH,aAAO;AAAA,QACL,WAAW;AAAA,QACX,UAAU;AAAA,QACV,gBAAgB;AAAA,MAClB;AAAA,IACF,KAAK;AACH,aAAO;AAAA,QACL,WAAW;AAAA,QACX,gBAAgB;AAAA,MAClB;AAAA,IACF,KAAK;AACH,aAAO;AAAA,QACL,WAAW;AAAA,QACX,UAAU;AAAA,QACV,gBAAgB;AAAA,MAClB;AAAA,IACF;AACE,aAAO;AAAA,QACL,WAAW;AAAA,QACX,gBAAgB;AAAA,MAClB;AAAA,EACJ;AACF;AAEO,SAAS,iBACd,cACA,qBACe;AACf,QAAM,oBAAoB,qBAAqB,YAAY;AAC3D,QAAM,sBACJ,qBAAqB,eAAe,QAAQ,iBAAiB,kBAAkB;AAGjF,QAAM,gBAAgB,sBAClB,EAAE,GAAG,mBAAmB,GAAG,qBAAqB,gBAAgB,oBAAoB,IACpF;AACJ,MAAI,CAAC,cAAc,gBAAgB;AACjC,YAAQ,MAAM,yCAAyC,aAAa,IAAI,EAAE;AAAA,EAC5E;AACA,SAAO;AACT;",
  "names": []
}
